package store

import (
	"database/sql"
	"fmt"

	_ "github.com/lib/pq"
	_ "github.com/sijms/go-ora/v2"

	"logSaver/pkg/config"
)

type Store interface {
	New(conf *config.Config) (*DB, error)
	CloseConnection() error
}

type DB struct {
	DB *sql.DB

	LogRepository
}

func (database *DB) createTestTables() {
	query := `DECLARE
    table_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO table_exists FROM user_tables WHERE table_name = UPPER('` + logTableName + `');
    
    IF table_exists = 0 THEN
        EXECUTE IMMEDIATE '
        CREATE TABLE ` + logTableName + ` (
            id INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
            user_id INTEGER, 
            phone VARCHAR2(20), 
            action_id INTEGER, 
            action_title VARCHAR2(255), 
            action_type VARCHAR2(50), 
            message VARCHAR2(1000), 
            sender VARCHAR2(100), 
            status VARCHAR2(50), 
            language VARCHAR2(10), 
            full_response VARCHAR2(1000), 
            created TIMESTAMP, 
            updated TIMESTAMP, 
            message_id VARCHAR2(100), 
            statusDelive INTEGER, 
            cost NUMBER(10,4), 
            CONSTRAINT logs_pk_3 PRIMARY KEY (id), 
            CONSTRAINT unique_message_phone_sender_3 UNIQUE (message_id, phone, sender)
        )';
    END IF;
END;`
	_, err := database.DB.Exec(query)
	if err != nil {
		fmt.Println("createTestTables", err)
	}
}
